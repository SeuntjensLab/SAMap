#<SAMap_Octopus_Fly

# task: run octopus paralarval brain samples vs fly (adult brain)
# run SAMapv0.1.6 -> newest version doesn't calculate gene pairs

# [1] prepare h5ad files (R) {
#module load R/4.0.0-foss-2018a-X11-20180604
#module load GCC/6.4.0-2.28
#module load OpenBLAS/0.2.20-GCC-6.4.0-2.28
#module load binutils/2.32-GCCcore-6.4.0
#module load HDF5/1.10.5-foss-2018a
#module load Pandoc/2.5
.libPaths("/staging/leuven/stg_00002/lcb/kspan/R/x86_64-pc-linux-gnu-library/4.0")
staging <- "/staging/leuven/stg_00002/lcb"
library(data.table)
#############################################################################################
library(Seurat)
library(SeuratDisk)
library(hdf5r)

wd <- file.path(staging, "kspan/OEB/OEBlarvaeClustRuth")
dir.create(wd)
setwd(wd)

## octopus data
## 17961 genes x 17081 cells
#############################
#brain_most_stable_clusters.h5ad -> see [[OEBsamapClustRuthFlyI]] & [[sceasy]]

## fly data
## 11652 genes x 118687 cells
#############################
loom <- H5File$new(file.path(staging, "jjans/analysis/FCA/brain/Davie_et_al/Davie_Janssens_Koldere_et_al_2018_AdultBrain.loom"), mode = 'r')

## get data, seurat-normalize
dgem <- t(loom[["matrix"]]$read())
genes <- loom[["row_attrs"]][["Gene"]]$read()
rownames(dgem) <- genes
cells <- loom[["col_attrs"]][["CellID"]]$read()
colnames(dgem) <- cells

fso <- CreateSeuratObject(counts = dgem, min.cells = 0, min.features = 0) 
fso
#11652 features across 118687 samples within 1 assay 

#meta data
fso <- AddMetaData(fso, 
	list(annotation = setNames(loom[["col_attrs"]][["cell_type"]]$read(),
		cells)))

fso <- NormalizeData(fso)
fso <- ScaleData(fso)
DefaultAssay(fso) <- "RNA"
saveRDS(fso, file = "Davie_Janssens_Koldere_et_al_2018_AdultBrain.rds.gz", compress = "gzip")

# marker genes for 205 cell types / clusters
markers <- fread(file.path(staging, "jjans/analysis/FCA/brain/Davie_et_al/results/Davie_Janssens_Koldere_reanalysis_markers_celltypes_final_new.tsv"))
#note: "Pm1-3" is "Pm1/Pm2/Pm3" in jaspers marker file
#}
# convert rds.gz file to h5ad with [[sceasy]] -> see [[OEBsamapMakeH5ADfiles.sh]]
 
# [2] run samap {
#input data from [[sceasy]]
conda_initialize /staging/leuven/stg_00002/lcb/kspan/software/anaconda3
conda activate SAMapv0.1.6

wd=${staging}kspan/OEB/OEBlarvaeClustRuth/OEBsamapClustRuthFlyII
mkdir ${wd}
cd ${wd}

python
from samap.mapping import SAMAP
from samap.analysis import get_mapping_scores, GenePairFinder
from samalg import SAM
from samap.utils import save_samap, load_samap
import pickle
import pandas as pd

staging = '/staging/leuven/stg_00002/lcb'
id1 = 'ov'
id2 = 'dm'

# blast results from [[OEBorthoBLAST]]
maps_folder = staging + '/kspan/OEB/OEBorthoBLAST/maps/'

# passing in file names
fn1 = staging + '/kspan/OEB/OEBlarvaeClustRuth/brain_most_stable_clusters.h5ad'
fn2 = staging + '/kspan/OEB/OEBlarvaeClustRuth/Davie_Janssens_Koldere_et_al_2018_AdultBrain.h5ad'
outname = 'samap_oeb_larvae_adult_flybrain'

# run SAMAP
sm = SAMAP(fn1, fn2, id1, id2, f_maps = maps_folder)
save_samap(sm, outname + '.pkl')
#10385 `ov` genes and 7776 `dm` gene symbols match between the datasets and the BLAST graph.

samap = sm.run()
#Stitching SAM 0 and SAM 1
#Found 138431 gene pairs
#Elapsed time: 31.945131393273673 minutes.

# save results
#saves to a .pkl file
save_samap(sm, outname + '_sm.pkl')
#with open(outname + '.pkl', 'rb') as fh: sm = pickle.load(fh)
with open(outname + '_samap.pkl', 'wb') as fh: pickle.dump(samap, fh)

umap =  pd.DataFrame(sm.samap.adata.obsm['X_umap'], index = list(sm.samap.adata.obs.index))
umap.to_csv(outname + '_umap.tsv', sep = '\t', encoding='utf-8')

# calculate alignment scores between cell types
k1 = 'stable_clusters'
k2 = 'annotation'
D1,D2,MappingTable = get_mapping_scores(sm, k1, k2)
MappingTable.to_csv(outname + '_annot.tsv', sep='\t', encoding='utf-8')

# find gene pairs enriched in a cell type mapping.
gpf = GenePairFinder(sm, k1=k1, k2=k2)
with open(outname + '_gpf.pkl', 'wb') as fh: pickle.dump(gpf, fh)

#gpf.find_genes can now be used to find gene pairs enriched in a cell type mapping
gene_pairs = gpf.find_all(thr=0.1)
gene_pairs.to_csv(outname + '_gene_pairs.tsv', sep = '\t', encoding = 'utf-8')

#Calculating gene pairs for the mapping: ov;1 to dm;2
#Calculating gene pairs for the mapping: ov;17 to dm;7
#Calculating gene pairs for the mapping: ov;19 to dm;T1
#Calculating gene pairs for the mapping: ov;26 to dm;Dopaminergic
#Calculating gene pairs for the mapping: ov;26 to dm;PAM
#Calculating gene pairs for the mapping: ov;26 to dm;Serotonergic
#Calculating gene pairs for the mapping: ov;28 to dm;Mi1
#Calculating gene pairs for the mapping: ov;3 to dm;T1
#Calculating gene pairs for the mapping: ov;32 to dm;Subperineurial_glia
#Calculating gene pairs for the mapping: ov;38 to dm;A/B*-KC
#Calculating gene pairs for the mapping: ov;38 to dm;A/B-KC
#Calculating gene pairs for the mapping: ov;38 to dm;G-KC
#Calculating gene pairs for the mapping: ov;4 to dm;Astrocyte-like
#Calculating gene pairs for the mapping: ov;4 to dm;Cortex_glia
#Calculating gene pairs for the mapping: ov;4 to dm;Ensheathing_glia
#Calculating gene pairs for the mapping: ov;45 to dm;Astrocyte-like
#Calculating gene pairs for the mapping: ov;45 to dm;Ensheathing_glia
#Calculating gene pairs for the mapping: ov;53 to dm;C3
#Calculating gene pairs for the mapping: ov;61 to dm;Poxn
#Calculating gene pairs for the mapping: ov;63 to dm;Octopaminergic
#Calculating gene pairs for the mapping: ov;63 to dm;Tyraminergic
#Calculating gene pairs for the mapping: ov;65 to dm;16
#Calculating gene pairs for the mapping: ov;69 to dm;Plasmatocytes
#Calculating gene pairs for the mapping: ov;73 to dm;Cortex_glia
#Calculating gene pairs for the mapping: ov;84 to dm;G-KC
#}

# [3] plot results {
#<[[OEBsamapClustRuthFlyI]]
#module load R/4.0.0-foss-2018a-X11-20180604
#module load GCC/6.4.0-2.28
#module load OpenBLAS/0.2.20-GCC-6.4.0-2.28
#module load binutils/2.32-GCCcore-6.4.0
#module load HDF5/1.10.5-foss-2018a
#module load Pandoc/2.5
.libPaths("/staging/leuven/stg_00002/lcb/kspan/R/x86_64-pc-linux-gnu-library/4.0")
staging <- "/staging/leuven/stg_00002/lcb"
library(data.table)
#############################################################################################
library(ggplot2)
library(Cairo)
library(hdf5r)
library(gridExtra)

#plot colours
cbp1 <- c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
colors_dutch <- c(
  '#FFC312','#C4E538','#12CBC4','#FDA7DF','#ED4C67',
  '#F79F1F','#A3CB38','#1289A7','#D980FA','#B53471',
  '#EE5A24','#009432','#0652DD','#9980FA','#833471',
  '#EA2027','#006266','#1B1464','#5758BB','#6F1E51'
)

wd <- file.path(staging, "kspan/OEB/OEBlarvaeClustRuth/OEBsamapClustRuthFlyII")
setwd(wd)

#SAMap umap
umap <- fread("samap_oeb_larvae_adult_flybrain_umap.tsv", header = T, key = "V1")
clusters <- fread("../stable_clusters.tsv", key = "cell")
clusters[, stable_cluster := paste0("ov_", stable_cluster)]

sam <- clusters[umap]
names(sam) <- c("cell", "cluster", "umap1", "umap2")
sam[, organism := ifelse(grepl("DGRP|w1118", cell), "fly", "octopus")]
sam[, .N, by = organism]
#   organism      N
#1:      fly 118687
#2:  octopus  17081

p <- ggplot(data = sam[sample(1:nrow(sam), nrow(sam))], aes(x = umap1, y = umap2, colour = organism)) +
	geom_point(size = 0.3) +
	scale_colour_manual(values = cbp1) +
	theme_bw() + 
	#theme(legend.position="none") +
	theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
		panel.background = element_blank(), axis.line = element_line(colour = "black"))
CairoPDF("umap_species.pdf", width = 6, height = 5)
p
dev.off()

# plot annotation {
maptab_annot <- fread("samap_oeb_larvae_adult_flybrain_annot.tsv", header = T)
maptab_annot <- melt(maptab_annot, id.vars = "V1", 
	measure.vars = names(maptab_annot)[2:ncol(maptab_annot)])
names(maptab_annot) <- c("fly_annotation", "variable", "value")
maptab_annot[, fly_annotation := gsub("dm_", "", fly_annotation)]
	
CairoPNG("mapvalues_annot.png")
plot(maptab_annot[order(value), value], pch = 16)
dev.off()

# keep mappings >= 0.1
maptab_annot <- maptab_annot[value >= 0.1]

#are there fly annotations mapping equally well to several octopus clusters?
maptab_annot[order(fly_annotation)]
    fly_annotation variable     value
 1:             27     ov_2 0.1011161
 2:             53    ov_65 0.1921908
 3:        A/B*-KC    ov_38 0.1232753
 4:         A/B-KC    ov_38 0.1770422
 5:         A/B-KC    ov_60 0.2585364
 6:            AST     ov_4 0.1900461		astrocyte-like
 7:            AST    ov_45 0.2002284 *
 8:             C3    ov_53 0.2739355
 9:            CTX     ov_4 0.1745156		cortex glia
10:            ENS     ov_4 0.5377471 *		ensheathing glia
11:            ENS    ov_45 0.1150376
12:           G-KC    ov_38 0.2701761 *
13:           G-KC    ov_84 0.1064673
14:            Mi1    ov_28 0.1023928
15:           OCTY    ov_63 0.1379675		octopaminergic
16:            PAM    ov_26 0.7194805
17:            PLM    ov_69 0.6954611		plasmatocytes
18:            PNG    ov_32 0.1066799		perineurial glia
19:            SER    ov_26 0.2847403 *		serotonergic
20:            SER    ov_63 0.1533594
21:            SUB    ov_10 0.1122733
22:             T1     ov_3 0.3279214
23:          T4/T5     ov_3 0.1629950
24:       Tm1/TmY8    ov_28 0.1401827
25:       Tm1/TmY8     ov_9 0.2124199 *

maptab_annot[fly_annotation %like% "KC"]
   fly_annotation variable     value
1:        A/B*-KC    ov_38 0.1232753
2:         A/B-KC    ov_38 0.1770422
3:           G-KC    ov_38 0.2701761
4:         A/B-KC    ov_60 0.2585364
5:           G-KC    ov_84 0.1064673

# keep max value per octopus cluster
maptab_annot[order(variable)]
    fly_annotation variable     value
 1:            SUB    ov_10 0.1122733
 2:             27     ov_2 0.1011161
 3:            PAM    ov_26 0.7194805 *
 4:            SER    ov_26 0.2847403
 5:            Mi1    ov_28 0.1023928
 6:       Tm1/TmY8    ov_28 0.1401827 *
 7:             T1     ov_3 0.3279214 *
 8:          T4/T5     ov_3 0.1629950
 9:            PNG    ov_32 0.1066799
10:        A/B*-KC    ov_38 0.1232753
11:         A/B-KC    ov_38 0.1770422
12:           G-KC    ov_38 0.2701761 *
13:            AST     ov_4 0.1900461
14:            CTX     ov_4 0.1745156
15:            ENS     ov_4 0.5377471 *
16:            AST    ov_45 0.2002284 *
17:            ENS    ov_45 0.1150376
18:             C3    ov_53 0.2739355
19:         A/B-KC    ov_60 0.2585364
20:           OCTY    ov_63 0.1379675
21:            SER    ov_63 0.1533594 *
22:             53    ov_65 0.1921908
23:            PLM    ov_69 0.6954611
24:           G-KC    ov_84 0.1064673
25:       Tm1/TmY8     ov_9 0.2124199

maptab_annot <- maptab_annot[maptab_annot[, .I[value == max(value)], by = variable]$V1]

maptab_annot[order(variable), .(variable, fly_annotation, value)]
    variable fly_annotation     value
 1:    ov_10            SUB 0.1122733
 2:     ov_2             27 0.1011161
 3:    ov_26            PAM 0.7194805
 4:    ov_28       Tm1/TmY8 0.1401827
 5:     ov_3             T1 0.3279214
 6:    ov_32            PNG 0.1066799
 7:    ov_38           G-KC 0.2701761
 8:     ov_4            ENS 0.5377471
 9:    ov_45            AST 0.2002284
10:    ov_53             C3 0.2739355
11:    ov_60         A/B-KC 0.2585364
12:    ov_63            SER 0.1533594
13:    ov_65             53 0.1921908
14:    ov_69            PLM 0.6954611
15:    ov_84           G-KC 0.1064673
16:     ov_9       Tm1/TmY8 0.2124199

setkey(sam, "cluster")
setkey(maptab_annot, "variable")
sam_annot <- merge(sam, maptab_annot, 
	by.x = "cluster", by.y = "variable", all.x = TRUE, allow.cartesian=TRUE)

p1 <- ggplot(data = sam_annot, aes(x = tSNE_1, y = tSNE_2, colour = fly_annotation)) +
	geom_point(data = sam_annot[is.na(fly_annotation)], size = 0.5, colour = "grey") +
	geom_point(data = sam_annot[!is.na(fly_annotation)], size = 0.5) +
	scale_color_manual(values = colors_dutch) +
	theme_bw() + 
	#theme(legend.position="none") +
	theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
		panel.background = element_blank(), axis.line = element_line(colour = "black"))

CairoPDF("tsne_annot.pdf", width = 9, height = 5)
p1
dev.off()

# gene pairs 
genep <- fread("samap_oeb_larvae_adult_flybrain_gene_pairs.tsv", sep = "\t", 
	fill = TRUE, header = TRUE)
names(genep) <- gsub(" ", "_", gsub("dm_", "", gsub(";", "_", names(genep))))

gene_pairs <- list()
annots <- paste0(maptab_annot[, variable], "_", maptab_annot[, fly_annotation])
annots <- annots[!grepl("unannotated|artefact", annots)]
annots <- gsub(" ", "_", annots)
for (i in annots) {
	p <- genep[, .(get(i))][V1 != ""]
	p[, ov := gsub("ov_", "", gsub(";.*", "", V1))]
	p[, dm := gsub("dm_", "", gsub("[^;]+;", "", V1))]
	gene_pairs[[i]] <- p[order(dm)]
}
saveRDS(gene_pairs, file = "samap_oeb_larvae_adult_flybrain_gene_pairs.rds.gz", compress = "gzip")
#}

sessionInfo() #{
#R version 4.0.0 (2020-04-24)
#Platform: x86_64-pc-linux-gnu (64-bit)
#Running under: CentOS Linux 7 (Core)
#
#Matrix products: default
#BLAS/LAPACK: /vsc-hard-mounts/leuven-apps/skylake/2018a/software/OpenBLAS/0.2.20-GCC-6.4.0-2.28/lib/libopenblas_haswellp-r0.2.20.so
#
#locale:
# [1] LC_CTYPE=en_US.utf8       LC_NUMERIC=C             
# [3] LC_TIME=en_US.utf8        LC_COLLATE=C             
# [5] LC_MONETARY=en_US.utf8    LC_MESSAGES=en_US.utf8   
# [7] LC_PAPER=en_US.utf8       LC_NAME=C                
# [9] LC_ADDRESS=C              LC_TELEPHONE=C           
#[11] LC_MEASUREMENT=en_US.utf8 LC_IDENTIFICATION=C      
#
#attached base packages:
#[1] stats     graphics  grDevices utils     datasets  methods   base     
#
#other attached packages:
#[1] gridExtra_2.3     hdf5r_1.3.3       Cairo_1.5-12      ggplot2_3.3.3    
#[5] data.table_1.14.0
#
#loaded via a namespace (and not attached):
# [1] magrittr_2.0.1   bit_4.0.4        tidyselect_1.1.0 munsell_0.5.0   
# [5] colorspace_2.0-0 R6_2.5.0         rlang_0.4.10     fansi_0.4.2     
# [9] dplyr_1.0.5      grid_4.0.0       gtable_0.3.0     utf8_1.2.1      
#[13] DBI_1.1.1        withr_2.4.2      ellipsis_0.3.1   digest_0.6.27   
#[17] bit64_4.0.5      assertthat_0.2.1 tibble_3.1.1     lifecycle_1.0.0 
#[21] crayon_1.4.1     farver_2.1.0     purrr_0.3.4      vctrs_0.3.7     
#[25] glue_1.4.2       labeling_0.4.2   compiler_4.0.0   pillar_1.6.0    
#[29] generics_0.1.0   scales_1.1.1     pkgconfig_2.0.3 
#}
#}
